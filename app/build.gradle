apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'

android {

    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        vectorDrawables.useSupportLibrary = true
        applicationId "hello.leilei"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 3
        versionName "1.0.2"
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'

        ndk {
            //'x86', 'x86_64',
            abiFilters 'armeabi', 'armeabi-v7a', 'x86'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        textReport true
        textOutput 'stdout'
        disable 'InvalidPackage'
        abortOnError false
        disable "MissingTranslation" // 禁用中英文string.xml的强制lint
    }

    /* repositories {
         flatDir {
             dirs 'libs'
         }
     }*/

    //修改生成的apk名字
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def oldFile = output.outputFile
            def apkName;
            if (variant.productFlavors == null || variant.productFlavors.size() == 0)
                apkName = 'NativeAudio_' + variant.buildType.name + "_" + defaultConfig.versionName + '.apk'
            else apkName = 'NativeAudio_' + variant.productFlavors[0].name + "_" + variant.buildType.name + "_" + defaultConfig.versionName + '.apk'
            output.outputFile = new File(oldFile.parent, apkName)
            /*if (variant.buildType.name == 'debug') {
                def releaseApkName = 'NativeAudio_' + variant.productFlavors[0].name + "_" + variant.buildType.name + defaultConfig.versionName + '.apk'
                output.outputFile = new File(oldFile.parent, releaseApkName)
            }*/
        }
    }

}
dependencies {

    compile fileTree(dir: 'libs', include: ['*.jar'])

    // Android Testing Support Library's runner and rules
    androidTestCompile "${rootProject.ext.test_junit}"
    androidTestCompile('com.android.support.test:runner:0.5') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestCompile('com.android.support.test:runner:0.5') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    //androidTestCompile "${rootProject.ext.espresso_core}"

    androidTestCompile "${rootProject.ext.support_annotations}"
    androidTestCompile "${rootProject.ext.recyclerview_v7}"
    androidTestCompile "${rootProject.ext.support_design}"
    testCompile "${rootProject.ext.test_junit}"

    compile "${rootProject.ext.support_annotations}"
    compile "${rootProject.ext.recyclerview_v7}"
    // design 包括 v4,v7
    compile "${rootProject.ext.support_design}"
    compile 'com.jakewharton.timber:timber:4.6.0'
    // rx
    compile "${rootProject.ext.rxjava}"
    compile "${rootProject.ext.rxandroid}"

    // okhttp
    compile 'com.squareup.okhttp3:okhttp:3.9.1'
    compile 'com.squareup.okhttp3:logging-interceptor:3.9.1'
    compile 'com.squareup.okio:okio:1.13.0'
    compile 'com.google.code.gson:gson:2.8.2'

    compile "${rootProject.ext.Prefs}"

    //retrofit
    compile "${rootProject.ext.retrofit}"
    compile "${rootProject.ext.retrofit_convter_gson}"
    compile "${rootProject.ext.retrofit_adapter_rx}"

    // butterknife
    apt "${rootProject.ext.butterknife_compiler}"
    compile("${rootProject.ext.butterknife}") {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    //图片加载
    compile "${rootProject.ext.glide}"
    //compile "${rootProject.ext.gson}"

    compile project(':library')

    //compile 'cn.zhaiyifan:lyricview:1.0.1'
    compile project(':bmoblibrary')
    //compile 'me.leilei.learncode:bmoblibrary:0.0.5-SNAPSHOT@aar'
    compile("${rootProject.ext.exoplayer_core}") {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    //compile "${rootProject.ext.exoplayer_okhttp}"
    compile("${rootProject.ext.exoplayer_okhttp}") {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    compile project(':extensions:ffmpeg')
}
